from get_data_sample import get_notes_samples


def test_get_data_sample():
    note_samples = {}
    collated_text = """
    ༄༅། །ཆོས་ཀྱི་སྐུ་ལ་གནས་པའི་ཡོན་ཏན་ཐུན་མོང་མ་ཡིན་པ་ལ་བསྟོད་པ།
༄༅༅། །ཆོས་ཀྱི་སྐུ་ལ་གནས་པའི་ཡོན་ཏན་ཐུན་མོང་མ་ཡིན་པ་ལ་བསྟོད་
ཐོགས་པ་མི་མངའ་རྟག་ཏུ་ཡང་། །མཉམ་པར་གཞག་(༢) <«སྣར་»བཞག>ཅིང་འདྲི་ཀུན་གྱི། །ལན་
1-169
འཚལ་ལོ། །ཆེད་དུ་ཞུ་(༡) <«པེ་»«སྣར་»བཞུད།>དང་དེ་དག་གི། །ཚིག་དང་སྤྱོད་མཁྱེན་འོངས་པ་དང་། །
མཐོང་བ་ཙམ་གྱིས་དད་འགྱུར་བར། །མཛད་པ་ཁྱོད་ལ་ཕྱག་འཚལ་ལོ། །ལེན་
དང་གནས་དང་གཏོང་བ་དང་། །སྤྲུལ་པ་དང་ནི་བསྒྱུར་བ་དང་། །ཏིང་ངེ་
འཛིན་དང་ཡེ་ཤེས་ལ། །མངའ་བརྙེས་ཁྱོད་ལ་ཕྱག་འཚལ་ལོ། །ཐབས་དང་
སྐྱབས་དང་དག་པ་དང་། །ངེས་འབྱུང་ཐེག་པ་ཆེན་པོ་ལ། །སེམས་ཅན་རྣམས་
:ལ་སླུ་(༢) <«པེ་»«སྣར་»བསླུ།>བ་ཡི། །བདུད་འཇོམས་ཁྱོད་ལ་ཕྱག་འཚལ་ལོ། །ཡེ་ཤེས་དང་ནི་སྤངས་པ་
མཛད་པ། །ཀུན་ནས་ཉོན་མོངས་གཏན་སྤངས་ལ(༣) <«པེ་»«སྣར་»པ།>། །བསྲུང་བ་མི་མངའ་བསྙེལ་
མི་མངའ། །ཚོགས་སྡུད་ཁྱོད་ལ་ཕྱག་འཚལ་ལོ། །གཤེགས་བཞུགས་ཀུན་དུ་རྟག་
བྱང་ཆུབ་ཆེན་པོའི་རྣམ་པ་ཀུན། །སྐུ་གསུམ་(༤) <«པེ་»«སྣར་»གསུང་།>དག་གིས་བརྙེས་གྱུར་པ། །ཀུན་དུ་
སེམས་ཅན་ཐམས་ཅད་ཀྱི། །དོགས་གཅོད་ཁྱོད་ལ་ཕྱག་འཚལ་ལོ། །སྲི་བ་མི་་་
འཚལ་ལོ། །ཆེད་དུ་ཞུ་(༡) <«པེ་»«སྣར་»བཞུད།>དང་དེ་དག་གི། །ཚིག་དང་སྤྱོད་མཁྱེན་འོངས་པ་དང་།
    """
    text_id = 'D1119'
    note_samples = get_notes_samples(collated_text, note_samples, text_id)
    expected_note_samples = {
        '། །མཉམ་པར་[གཞག་,གཞག་,བཞག,གཞག་]ཅིང་འདྲི་ཀུན་གྱི།': 
        {
            'count': 1,
            'text_id': text_id,
            'note_options':
            {
                'derge': 'གཞག་',
                'chone': 'གཞག་',
                'narthang': 'བཞག',
                'peking': 'གཞག་',
                
            }
        },
        'ལོ། །ཆེད་དུ་[ཞུ་,ཞུ་,བཞུད།,བཞུད།]དང་དེ་དག་གི།':
        {
            'count': 2,
            'text_id': text_id,
            'note_options':
            {
                'derge': 'ཞུ་',
                'chone': 'ཞུ་',
                'narthang': 'བཞུད།',
                'peking': 'བཞུད།',
                
            }
        },
        '།སེམས་ཅན་རྣམས་[ལ་སླུ་,ལ་སླུ་,བསླུ།,བསླུ།]བ་ཡི། །བདུད་': 
        {
            'count': 1,
            'text_id': text_id,
            'note_options':
            {
                'derge': 'ལ་སླུ་',
                'chone': 'ལ་སླུ་',
                'narthang': 'བསླུ།',
                'peking': 'བསླུ།',
                
            }
        },
        'ཉོན་མོངས་གཏན་སྤངས་[ལ,ལ,པ།,པ།]། །བསྲུང་བ་': 
        {
            'count': 1,
            'text_id': text_id,
            'note_options':
            {
                'derge': 'ལ',
                'chone': 'ལ',
                'narthang': 'པ།',
                'peking': 'པ།',
                
            }
        },
        'པ་ཀུན། །སྐུ་[གསུམ་,གསུམ་,གསུང་།,གསུང་།]དག་གིས་བརྙེས་གྱུར་':
        {
            'count': 1,
            'text_id': text_id,
            'note_options':
            {
                'derge': 'གསུམ་',
                'chone': 'གསུམ་',
                'narthang': 'གསུང་།',
                'peking': 'གསུང་།',
                
            }
        }

    }
    for (note, note_info), (exp_note, exp_note_info)  in zip(note_samples.items(), expected_note_samples.items()):
        assert note == exp_note
        assert note_info == exp_note_info


if __name__ == "__main__":
    test_get_data_sample()